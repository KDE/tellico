# Makefile.in generated by automake 1.9.4 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.409 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


SOURCES = $(tellico_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = tellico$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(rcdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_tellico_OBJECTS = entryview.$(OBJEXT) collection.$(OBJEXT) \
	mainwindow.$(OBJEXT) controller.$(OBJEXT) \
	kwidgetlister.$(OBJEXT) isbnvalidator.$(OBJEXT) \
	finddialog.$(OBJEXT) configdialog.$(OBJEXT) main.$(OBJEXT) \
	image.$(OBJEXT) collectionfactory.$(OBJEXT) \
	collectionfieldsdialog.$(OBJEXT) detailedlistview.$(OBJEXT) \
	document.$(OBJEXT) entry.$(OBJEXT) entryitem.$(OBJEXT) \
	exportdialog.$(OBJEXT) field.$(OBJEXT) fieldwidget.$(OBJEXT) \
	filehandler.$(OBJEXT) filter.$(OBJEXT) filterdialog.$(OBJEXT) \
	groupview.$(OBJEXT) importdialog.$(OBJEXT) \
	labelaction.$(OBJEXT) tabcontrol.$(OBJEXT) \
	imagewidget.$(OBJEXT) fieldcompletion.$(OBJEXT) \
	imagefactory.$(OBJEXT) stringmapdialog.$(OBJEXT) \
	entryeditdialog.$(OBJEXT) fetchdialog.$(OBJEXT) \
	tellico_kernel.$(OBJEXT) viewstack.$(OBJEXT) \
	entryiconview.$(OBJEXT) datewidget.$(OBJEXT) \
	multiselectionlistview.$(OBJEXT) ratingwidget.$(OBJEXT) \
	tellico_strings.$(OBJEXT) tellico_utils.$(OBJEXT)
#>- tellico_OBJECTS = $(am_tellico_OBJECTS)
#>+ 21
tellico_final_OBJECTS = tellico.all_cpp.o 
tellico_nofinal_OBJECTS = entryview.$(OBJEXT) collection.$(OBJEXT) \
	mainwindow.$(OBJEXT) controller.$(OBJEXT) \
	kwidgetlister.$(OBJEXT) isbnvalidator.$(OBJEXT) \
	finddialog.$(OBJEXT) configdialog.$(OBJEXT) main.$(OBJEXT) \
	image.$(OBJEXT) collectionfactory.$(OBJEXT) \
	collectionfieldsdialog.$(OBJEXT) detailedlistview.$(OBJEXT) \
	document.$(OBJEXT) entry.$(OBJEXT) entryitem.$(OBJEXT) \
	exportdialog.$(OBJEXT) field.$(OBJEXT) fieldwidget.$(OBJEXT) \
	filehandler.$(OBJEXT) filter.$(OBJEXT) filterdialog.$(OBJEXT) \
	groupview.$(OBJEXT) importdialog.$(OBJEXT) \
	labelaction.$(OBJEXT) tabcontrol.$(OBJEXT) \
	imagewidget.$(OBJEXT) fieldcompletion.$(OBJEXT) \
	imagefactory.$(OBJEXT) stringmapdialog.$(OBJEXT) \
	entryeditdialog.$(OBJEXT) fetchdialog.$(OBJEXT) \
	tellico_kernel.$(OBJEXT) viewstack.$(OBJEXT) \
	entryiconview.$(OBJEXT) datewidget.$(OBJEXT) \
	multiselectionlistview.$(OBJEXT) ratingwidget.$(OBJEXT) \
	tellico_strings.$(OBJEXT) tellico_utils.$(OBJEXT)
@KDE_USE_FINAL_FALSE@tellico_OBJECTS = $(tellico_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@tellico_OBJECTS = $(tellico_final_OBJECTS)
am__DEPENDENCIES_1 =
@USE_LIBBTPARSE_FALSE@am__DEPENDENCIES_2 =  \
@USE_LIBBTPARSE_FALSE@	./translators/btparse/libbtparse.a
tellico_DEPENDENCIES = ./fetch/libfetch.a \
	./collections/libcollections.a ./translators/libtranslators.a \
	./translators/pilotdb/libpilotdb.a \
	./translators/pilotdb/libflatfile/liblibflatfile.a \
	./translators/pilotdb/libpalm/liblibpalm.a \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(tellico_SOURCES)
DIST_SOURCES = $(tellico_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-exec-recursive install-info-recursive \
#>- 	install-recursive installcheck-recursive installdirs-recursive \
#>- 	pdf-recursive ps-recursive uninstall-info-recursive \
#>- 	uninstall-recursive
#>+ 6
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
rcDATA_INSTALL = $(INSTALL_DATA)
DATA = $(rc_DATA)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCDDB_LIBS = @KCDDB_LIBS@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXINERAMA = @LIBXINERAMA@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXML_RPATH = @LIBXML_RPATH@
LIBXSLT_CFLAGS = @LIBXSLT_CFLAGS@
LIBXSLT_LIBS = @LIBXSLT_LIBS@
LIBXSLT_RPATH = @LIBXSLT_RPATH@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TAGLIB_CFLAGS = @TAGLIB_CFLAGS@
TAGLIB_LIBS = @TAGLIB_LIBS@
TAGLIB_RPATH = @TAGLIB_RPATH@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_LIBBTPARSE_FALSE = @USE_LIBBTPARSE_FALSE@
USE_LIBBTPARSE_TRUE = @USE_LIBBTPARSE_TRUE@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLCATALOG = @XMLCATALOG@
XML_CATALOG_FILE = @XML_CATALOG_FILE@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
YAZ_CFLAGS = @YAZ_CFLAGS@
YAZ_LIBS = @YAZ_LIBS@
YAZ_RPATH = @YAZ_RPATH@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
x_includes = @x_includes@
x_libraries = @x_libraries@
tellico_SOURCES = entryview.cpp collection.cpp mainwindow.cpp \
controller.cpp kwidgetlister.cpp isbnvalidator.cpp finddialog.cpp \
configdialog.cpp main.cpp image.cpp collectionfactory.cpp \
collectionfieldsdialog.cpp detailedlistview.cpp document.cpp entry.cpp \
entryitem.cpp exportdialog.cpp field.cpp fieldwidget.cpp filehandler.cpp \
filter.cpp filterdialog.cpp groupview.cpp importdialog.cpp labelaction.cpp \
tabcontrol.cpp imagewidget.cpp fieldcompletion.cpp imagefactory.cpp \
stringmapdialog.cpp entryeditdialog.cpp fetchdialog.cpp tellico_kernel.cpp \
viewstack.cpp entryiconview.cpp datewidget.cpp multiselectionlistview.cpp \
ratingwidget.cpp tellico_strings.cpp tellico_utils.cpp

@USE_LIBBTPARSE_FALSE@LDADD_LIBBTPARSE = ./translators/btparse/libbtparse.a
tellico_LDADD = ./fetch/libfetch.a ./collections/libcollections.a \
        ./translators/libtranslators.a ./translators/pilotdb/libpilotdb.a \
        ./translators/pilotdb/libflatfile/liblibflatfile.a \
        ./translators/pilotdb/libpalm/liblibpalm.a -lkdeprint -lexslt \
        $(LIB_KFILE) $(LIB_KHTML) $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_QT) \
        $(LIBSOCKET) $(LIBXSLT_LIBS) $(TAGLIB_LIBS) $(KCDDB_LIBS) $(YAZ_LIBS) \
        $(LDADD_LIBBTPARSE)

SUBDIRS = collections translators fetch tests
EXTRA_DIST = tellicoui.rc \
collection.cpp              entryview.h          imagefactory.h \
collectionfactory.cpp       exportdialog.cpp     image.h \
collectionfactory.h         exportdialog.h       imagewidget.cpp \
collectionfieldsdialog.cpp  fieldcompletion.cpp  imagewidget.h \
collectionfieldsdialog.h    fieldcompletion.h    importdialog.cpp \
collection.h                field.cpp            importdialog.h \
configdialog.cpp            field.h              isbnvalidator.cpp \
configdialog.h              fieldwidget.cpp      isbnvalidator.h \
controller.cpp              fieldwidget.h        kwidgetlister.cpp \
controller.h                filehandler.cpp      kwidgetlister.h \
detailedlistview.cpp        filehandler.h        labelaction.cpp \
detailedlistview.h          filter.cpp           labelaction.h \
document.cpp                filterdialog.cpp     main.cpp \
document.h                  filterdialog.h       mainwindow.cpp \
entry.cpp                   filter.h             mainwindow.h \
entryeditdialog.cpp         finddialog.cpp       stringmapdialog.cpp \
entryeditdialog.h           finddialog.h         stringmapdialog.h \
entry.h                     groupview.cpp        latin1literal.h \
entryitem.cpp               groupview.h          tabcontrol.cpp \
entryitem.h                 image.cpp            tabcontrol.h \
entryview.cpp               imagefactory.cpp     tellico_utils.h \
fetchdialog.h               fetchdialog.cpp      tellico_kernel.h \
tellico_kernel.cpp          viewstack.h          viewstack.cpp \
entryiconview.h             entryiconview.cpp    datewidget.h \
datewidget.cpp              multiselectionlistview.h \
multiselectionlistview.cpp  ratingwidget.h       ratingwidget.cpp \
tellico_strings.h           tellico_strings.cpp  tellico_utils.cpp


####### kdevelop will overwrite this part!!! (end)############
# These paths are KDE specific. Use them:
# kde_appsdir         Where your application's menu entry (.desktop) should go to.
# kde_icondir         Where your icon should go to - better use KDE_ICON.
# kde_sounddir        Where your sounds should go to.
# kde_htmldir         Where your docs should go to. (contains lang subdirs)
# kde_datadir         Where you install application data. (Use a subdir)
# kde_locale          Where translation files should go to. (contains lang subdirs)
# kde_cgidir          Where cgi-bin executables should go to.
# kde_confdir         Where config files should go to (system-wide ones with default values).
# kde_mimedir         Where mimetypes .desktop files should go to.
# kde_servicesdir     Where services .desktop files should go to.
# kde_servicetypesdir Where servicetypes .desktop files should go to.
# kde_toolbardir      Where general toolbar icons should go to (deprecated, use KDE_ICON).
# kde_wallpaperdir    Where general wallpapers should go to.
# kde_templatesdir    Where templates for the "New" menu (Konqueror/KDesktop) should go to.
# kde_bindir          Where executables should go to. Use bin_PROGRAMS or bin_SCRIPTS.
# kde_libdir          Where shared libraries should go to. Use lib_LTLIBRARIES.
# kde_moduledir       Where modules (e.g. parts) should go to. Use kde_module_LTLIBRARIES.
# kde_styledir        Where Qt/KDE widget styles should go to (new in KDE 3).
# kde_designerdir     Where Qt Designer plugins should go to (new in KDE 3).

# set the include path for X, qt and KDE
INCLUDES = $(all_includes) $(LIBXML_CFLAGS) $(LIBXSLT_CFLAGS)
#>- METASOURCES = AUTO
KDE_OPTIONS = noautodist
CLEANFILES = *~ *.loT

# the library search path.
tellico_LDFLAGS = $(all_libraries) $(KDE_RPATH) $(LIBXML_RPATH) $(LIBXSLT_RPATH)
rcdir = $(kde_datadir)/tellico
rc_DATA = tellicoui.rc
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit -padmin src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
tellico$(EXEEXT): $(tellico_OBJECTS) $(tellico_DEPENDENCIES) 
	@rm -f tellico$(EXEEXT)
	$(CXXLINK) $(tellico_LDFLAGS) $(tellico_OBJECTS) $(tellico_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collectionfactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collectionfieldsdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/controller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/datewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/detailedlistview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/document.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entryeditdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entryiconview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entryitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entryview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exportdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fetchdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/field.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fieldcompletion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fieldwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filehandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filterdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/finddialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/groupview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/image.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imagefactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imagewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/importdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isbnvalidator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kwidgetlister.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/labelaction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mainwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multiselectionlistview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ratingwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stringmapdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabcontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tellico_kernel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tellico_strings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tellico_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewstack.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(mkdir_p) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(rcdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-rcDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am uninstall-rcDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-rcDATA \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am uninstall-rcDATA


messages: rc.cpp
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
        if test -n "$$LIST"; then \
          $(XGETTEXT) $$LIST -o $(podir)/tellico.pot; \
        fi

#include ../admin/Doxyfile.am
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:


#>+ 3
configdialog.moc: $(srcdir)/configdialog.h
	$(MOC) $(srcdir)/configdialog.h -o configdialog.moc

#>+ 2
mocs: configdialog.moc

#>+ 3
datewidget.moc: $(srcdir)/datewidget.h
	$(MOC) $(srcdir)/datewidget.h -o datewidget.moc

#>+ 2
mocs: datewidget.moc

#>+ 3
entryiconview.moc: $(srcdir)/entryiconview.h
	$(MOC) $(srcdir)/entryiconview.h -o entryiconview.moc

#>+ 2
mocs: entryiconview.moc

#>+ 3
document.moc: $(srcdir)/document.h
	$(MOC) $(srcdir)/document.h -o document.moc

#>+ 2
mocs: document.moc

#>+ 3
collection.moc: $(srcdir)/collection.h
	$(MOC) $(srcdir)/collection.h -o collection.moc

#>+ 2
mocs: collection.moc

#>+ 3
exportdialog.moc: $(srcdir)/exportdialog.h
	$(MOC) $(srcdir)/exportdialog.h -o exportdialog.moc

#>+ 2
mocs: exportdialog.moc

#>+ 3
imagewidget.moc: $(srcdir)/imagewidget.h
	$(MOC) $(srcdir)/imagewidget.h -o imagewidget.moc

#>+ 2
mocs: imagewidget.moc

#>+ 3
tabcontrol.moc: $(srcdir)/tabcontrol.h
	$(MOC) $(srcdir)/tabcontrol.h -o tabcontrol.moc

#>+ 2
mocs: tabcontrol.moc

#>+ 3
finddialog.moc: $(srcdir)/finddialog.h
	$(MOC) $(srcdir)/finddialog.h -o finddialog.moc

#>+ 2
mocs: finddialog.moc

#>+ 3
controller.moc: $(srcdir)/controller.h
	$(MOC) $(srcdir)/controller.h -o controller.moc

#>+ 2
mocs: controller.moc

#>+ 3
fieldcompletion.moc: $(srcdir)/fieldcompletion.h
	$(MOC) $(srcdir)/fieldcompletion.h -o fieldcompletion.moc

#>+ 2
mocs: fieldcompletion.moc

#>+ 3
tellico_kernel.moc: $(srcdir)/tellico_kernel.h
	$(MOC) $(srcdir)/tellico_kernel.h -o tellico_kernel.moc

#>+ 2
mocs: tellico_kernel.moc

#>+ 3
groupview.moc: $(srcdir)/groupview.h
	$(MOC) $(srcdir)/groupview.h -o groupview.moc

#>+ 2
mocs: groupview.moc

#>+ 3
detailedlistview.moc: $(srcdir)/detailedlistview.h
	$(MOC) $(srcdir)/detailedlistview.h -o detailedlistview.moc

#>+ 2
mocs: detailedlistview.moc

#>+ 3
importdialog.moc: $(srcdir)/importdialog.h
	$(MOC) $(srcdir)/importdialog.h -o importdialog.moc

#>+ 2
mocs: importdialog.moc

#>+ 3
fetchdialog.moc: $(srcdir)/fetchdialog.h
	$(MOC) $(srcdir)/fetchdialog.h -o fetchdialog.moc

#>+ 2
mocs: fetchdialog.moc

#>+ 3
multiselectionlistview.moc: $(srcdir)/multiselectionlistview.h
	$(MOC) $(srcdir)/multiselectionlistview.h -o multiselectionlistview.moc

#>+ 2
mocs: multiselectionlistview.moc

#>+ 3
collectionfieldsdialog.moc: $(srcdir)/collectionfieldsdialog.h
	$(MOC) $(srcdir)/collectionfieldsdialog.h -o collectionfieldsdialog.moc

#>+ 2
mocs: collectionfieldsdialog.moc

#>+ 3
labelaction.moc: $(srcdir)/labelaction.h
	$(MOC) $(srcdir)/labelaction.h -o labelaction.moc

#>+ 2
mocs: labelaction.moc

#>+ 3
entryeditdialog.moc: $(srcdir)/entryeditdialog.h
	$(MOC) $(srcdir)/entryeditdialog.h -o entryeditdialog.moc

#>+ 2
mocs: entryeditdialog.moc

#>+ 3
viewstack.moc: $(srcdir)/viewstack.h
	$(MOC) $(srcdir)/viewstack.h -o viewstack.moc

#>+ 2
mocs: viewstack.moc

#>+ 3
entryview.moc: $(srcdir)/entryview.h
	$(MOC) $(srcdir)/entryview.h -o entryview.moc

#>+ 2
mocs: entryview.moc

#>+ 3
mainwindow.moc: $(srcdir)/mainwindow.h
	$(MOC) $(srcdir)/mainwindow.h -o mainwindow.moc

#>+ 2
mocs: mainwindow.moc

#>+ 3
filterdialog.moc: $(srcdir)/filterdialog.h
	$(MOC) $(srcdir)/filterdialog.h -o filterdialog.moc

#>+ 2
mocs: filterdialog.moc

#>+ 3
ratingwidget.moc: $(srcdir)/ratingwidget.h
	$(MOC) $(srcdir)/ratingwidget.h -o ratingwidget.moc

#>+ 2
mocs: ratingwidget.moc

#>+ 3
kwidgetlister.moc: $(srcdir)/kwidgetlister.h
	$(MOC) $(srcdir)/kwidgetlister.h -o kwidgetlister.moc

#>+ 2
mocs: kwidgetlister.moc

#>+ 3
stringmapdialog.moc: $(srcdir)/stringmapdialog.h
	$(MOC) $(srcdir)/stringmapdialog.h -o stringmapdialog.moc

#>+ 2
mocs: stringmapdialog.moc

#>+ 3
fieldwidget.moc: $(srcdir)/fieldwidget.h
	$(MOC) $(srcdir)/fieldwidget.h -o fieldwidget.moc

#>+ 2
mocs: fieldwidget.moc

#>+ 3
clean-metasources:
	-rm -f  configdialog.moc datewidget.moc entryiconview.moc document.moc collection.moc exportdialog.moc imagewidget.moc tabcontrol.moc finddialog.moc controller.moc fieldcompletion.moc tellico_kernel.moc groupview.moc detailedlistview.moc importdialog.moc fetchdialog.moc multiselectionlistview.moc collectionfieldsdialog.moc labelaction.moc entryeditdialog.moc viewstack.moc entryview.moc mainwindow.moc filterdialog.moc ratingwidget.moc kwidgetlister.moc stringmapdialog.moc fieldwidget.moc

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit -padmin src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
tellico.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/entryview.cpp $(srcdir)/collection.cpp $(srcdir)/mainwindow.cpp $(srcdir)/controller.cpp $(srcdir)/kwidgetlister.cpp $(srcdir)/isbnvalidator.cpp $(srcdir)/finddialog.cpp $(srcdir)/configdialog.cpp $(srcdir)/main.cpp $(srcdir)/image.cpp $(srcdir)/collectionfactory.cpp $(srcdir)/collectionfieldsdialog.cpp $(srcdir)/detailedlistview.cpp $(srcdir)/document.cpp $(srcdir)/entry.cpp $(srcdir)/entryitem.cpp $(srcdir)/exportdialog.cpp $(srcdir)/field.cpp $(srcdir)/fieldwidget.cpp $(srcdir)/filehandler.cpp $(srcdir)/filter.cpp $(srcdir)/filterdialog.cpp $(srcdir)/groupview.cpp $(srcdir)/importdialog.cpp $(srcdir)/labelaction.cpp $(srcdir)/tabcontrol.cpp $(srcdir)/imagewidget.cpp $(srcdir)/fieldcompletion.cpp $(srcdir)/imagefactory.cpp $(srcdir)/stringmapdialog.cpp $(srcdir)/entryeditdialog.cpp $(srcdir)/fetchdialog.cpp $(srcdir)/tellico_kernel.cpp $(srcdir)/viewstack.cpp $(srcdir)/entryiconview.cpp $(srcdir)/datewidget.cpp $(srcdir)/multiselectionlistview.cpp $(srcdir)/ratingwidget.cpp $(srcdir)/tellico_strings.cpp $(srcdir)/tellico_utils.cpp  configdialog.moc document.moc entryiconview.moc datewidget.moc exportdialog.moc collection.moc imagewidget.moc finddialog.moc tabcontrol.moc fieldcompletion.moc controller.moc tellico_kernel.moc groupview.moc detailedlistview.moc importdialog.moc fetchdialog.moc labelaction.moc collectionfieldsdialog.moc multiselectionlistview.moc entryeditdialog.moc mainwindow.moc entryview.moc viewstack.moc filterdialog.moc ratingwidget.moc kwidgetlister.moc fieldwidget.moc stringmapdialog.moc
	@echo 'creating tellico.all_cpp.cpp ...'; \
	rm -f tellico.all_cpp.files tellico.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> tellico.all_cpp.final; \
	for file in entryview.cpp collection.cpp mainwindow.cpp controller.cpp kwidgetlister.cpp isbnvalidator.cpp finddialog.cpp configdialog.cpp main.cpp image.cpp collectionfactory.cpp collectionfieldsdialog.cpp detailedlistview.cpp document.cpp entry.cpp entryitem.cpp exportdialog.cpp field.cpp fieldwidget.cpp filehandler.cpp filter.cpp filterdialog.cpp groupview.cpp importdialog.cpp labelaction.cpp tabcontrol.cpp imagewidget.cpp fieldcompletion.cpp imagefactory.cpp stringmapdialog.cpp entryeditdialog.cpp fetchdialog.cpp tellico_kernel.cpp viewstack.cpp entryiconview.cpp datewidget.cpp multiselectionlistview.cpp ratingwidget.cpp tellico_strings.cpp tellico_utils.cpp ; do \
	  echo "#include \"$$file\"" >> tellico.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> tellico.all_cpp.final; \
	done; \
	cat tellico.all_cpp.final tellico.all_cpp.files > tellico.all_cpp.cpp; \
	rm -f tellico.all_cpp.final tellico.all_cpp.files

#>+ 3
clean-final:
	-rm -f tellico.all_cpp.cpp

#>+ 3
final:
	$(MAKE) tellico_OBJECTS="$(tellico_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) tellico_OBJECTS="$(tellico_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) tellico_OBJECTS="$(tellico_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) tellico_OBJECTS="$(tellico_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 59
viewstack.o: viewstack.moc 
imagewidget.o: imagewidget.moc 
groupview.o: groupview.moc 
imagewidget.lo: imagewidget.moc 
document.o: document.moc 
stringmapdialog.lo: stringmapdialog.moc 
multiselectionlistview.o: multiselectionlistview.moc 
ratingwidget.lo: ratingwidget.moc 
entryview.o: entryview.moc 
importdialog.o: importdialog.moc 
filterdialog.o: filterdialog.moc 
detailedlistview.lo: detailedlistview.moc 
groupview.lo: groupview.moc 
datewidget.o: datewidget.moc 
document.lo: document.moc 
kwidgetlister.o: kwidgetlister.moc 
fetchdialog.o: fetchdialog.moc 
entryeditdialog.o: entryeditdialog.moc 
nmcheck-am: nmcheck
configdialog.lo: configdialog.moc 
fieldwidget.lo: fieldwidget.moc 
collectionfieldsdialog.lo: collectionfieldsdialog.moc 
controller.lo: controller.moc 
finddialog.lo: finddialog.moc 
fieldcompletion.lo: fieldcompletion.moc 
detailedlistview.o: detailedlistview.moc 
viewstack.lo: viewstack.moc 
collectionfieldsdialog.o: collectionfieldsdialog.moc 
entryiconview.lo: entryiconview.moc 
finddialog.o: finddialog.moc 
mainwindow.lo: mainwindow.moc 
tabcontrol.o: tabcontrol.moc 
tabcontrol.lo: tabcontrol.moc 
datewidget.lo: datewidget.moc 
entryview.lo: entryview.moc 
ratingwidget.o: ratingwidget.moc 
collection.lo: collection.moc 
configdialog.o: configdialog.moc 
fetchdialog.lo: fetchdialog.moc 
tellico_kernel.lo: tellico_kernel.moc 
tellico_kernel.o: tellico_kernel.moc 
nmcheck: 
labelaction.lo: labelaction.moc 
labelaction.o: labelaction.moc 
importdialog.lo: importdialog.moc 
filterdialog.lo: filterdialog.moc 
exportdialog.lo: exportdialog.moc 
fieldwidget.o: fieldwidget.moc 
stringmapdialog.o: stringmapdialog.moc 
controller.o: controller.moc 
multiselectionlistview.lo: multiselectionlistview.moc 
exportdialog.o: exportdialog.moc 
fieldcompletion.o: fieldcompletion.moc 
mainwindow.o: mainwindow.moc 
entryiconview.o: entryiconview.moc 
collection.o: collection.moc 
entryeditdialog.lo: entryeditdialog.moc 
kwidgetlister.lo: kwidgetlister.moc 
