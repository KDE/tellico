// This file is generated by kconfig_compiler from tellico_config.kcfg.
// All changes you do to this file will be lost.

#include "tellico_config.h"

#include <kstaticdeleter.h>

using namespace Tellico;

Config *Config::mSelf = 0;
static KStaticDeleter<Config> staticConfigDeleter;

Config *Config::self()
{
  if ( !mSelf ) {
    staticConfigDeleter.setObject( mSelf, new Config() );
    mSelf->readConfig();
  }

  return mSelf;
}

Config::Config(  )
  : KConfigSkeleton( QString::fromLatin1( "tellicorc" ) )
{
  mSelf = this;
  setCurrentGroup( QString::fromLatin1( "TipOfDay" ) );

  KConfigSkeleton::ItemBool  *itemShowTipOfDay;
  itemShowTipOfDay = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "RunOnStart" ), mShowTipOfDay, true );
  addItem( itemShowTipOfDay, QString::fromLatin1( "showTipOfDay" ) );

  setCurrentGroup( QString::fromLatin1( "Main Window Options" ) );

  QValueList<int> defaultMainSplitterSizes;

  KConfigSkeleton::ItemIntList  *itemMainSplitterSizes;
  itemMainSplitterSizes = new KConfigSkeleton::ItemIntList( currentGroup(), QString::fromLatin1( "Main Splitter Sizes" ), mMainSplitterSizes, defaultMainSplitterSizes );
  addItem( itemMainSplitterSizes, QString::fromLatin1( "MainSplitterSizes" ) );
  QValueList<int> defaultSecondarySplitterSizes;

  KConfigSkeleton::ItemIntList  *itemSecondarySplitterSizes;
  itemSecondarySplitterSizes = new KConfigSkeleton::ItemIntList( currentGroup(), QString::fromLatin1( "Secondary Splitter Sizes" ), mSecondarySplitterSizes, defaultSecondarySplitterSizes );
  addItem( itemSecondarySplitterSizes, QString::fromLatin1( "SecondarySplitterSizes" ) );

  setCurrentGroup( QString::fromLatin1( "Detailed View Options" ) );

  KConfigSkeleton::ItemInt  *itemMaxPixmapWidth;
  itemMaxPixmapWidth = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "MaxPixmapWidth" ), mMaxPixmapWidth, 50 );
  addItem( itemMaxPixmapWidth, QString::fromLatin1( "MaxPixmapWidth" ) );
  KConfigSkeleton::ItemInt  *itemMaxPixmapHeight;
  itemMaxPixmapHeight = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "MaxPixmapHeight" ), mMaxPixmapHeight, 50 );
  addItem( itemMaxPixmapHeight, QString::fromLatin1( "MaxPixmapHeight" ) );

  setCurrentGroup( QString::fromLatin1( "Group View Options" ) );

  KConfigSkeleton::ItemInt  *itemGroupViewSortColumn;
  itemGroupViewSortColumn = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "SortColumn" ), mGroupViewSortColumn, 0 );
  addItem( itemGroupViewSortColumn, QString::fromLatin1( "groupViewSortColumn" ) );
  KConfigSkeleton::ItemBool  *itemGroupViewSortAscending;
  itemGroupViewSortAscending = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "SortAscending" ), mGroupViewSortAscending, true );
  addItem( itemGroupViewSortAscending, QString::fromLatin1( "groupViewSortAscending" ) );

  setCurrentGroup( QString::fromLatin1( "Filter View Options" ) );

  KConfigSkeleton::ItemInt  *itemFilterViewSortColumn;
  itemFilterViewSortColumn = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "SortColumn" ), mFilterViewSortColumn, 0 );
  addItem( itemFilterViewSortColumn, QString::fromLatin1( "filterViewSortColumn" ) );
  KConfigSkeleton::ItemBool  *itemFilterViewSortAscending;
  itemFilterViewSortAscending = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "SortAscending" ), mFilterViewSortAscending, true );
  addItem( itemFilterViewSortAscending, QString::fromLatin1( "filterViewSortAscending" ) );

  setCurrentGroup( QString::fromLatin1( "Loan View Options" ) );

  KConfigSkeleton::ItemInt  *itemLoanViewSortColumn;
  itemLoanViewSortColumn = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "SortColumn" ), mLoanViewSortColumn, 0 );
  addItem( itemLoanViewSortColumn, QString::fromLatin1( "loanViewSortColumn" ) );
  KConfigSkeleton::ItemBool  *itemLoanViewSortAscending;
  itemLoanViewSortAscending = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "SortAscending" ), mLoanViewSortAscending, true );
  addItem( itemLoanViewSortAscending, QString::fromLatin1( "loanViewSortAscending" ) );

  setCurrentGroup( QString::fromLatin1( "Export Options - Bibtex" ) );

  KConfigSkeleton::ItemBool  *itemUseBraces;
  itemUseBraces = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Use Braces" ), mUseBraces, true );
  addItem( itemUseBraces, QString::fromLatin1( "UseBraces" ) );

  setCurrentGroup( QString::fromLatin1( "General Options" ) );

  KConfigSkeleton::ItemBool  *itemShowGroupWidget;
  itemShowGroupWidget = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Show Group Widget" ), mShowGroupWidget, true );
  addItem( itemShowGroupWidget, QString::fromLatin1( "ShowGroupWidget" ) );
  KConfigSkeleton::ItemBool  *itemShowEditWidget;
  itemShowEditWidget = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Show Edit Widget" ), mShowEditWidget, false );
  addItem( itemShowEditWidget, QString::fromLatin1( "ShowEditWidget" ) );
  KConfigSkeleton::ItemBool  *itemShowEntryView;
  itemShowEntryView = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Show Entry View" ), mShowEntryView, true );
  addItem( itemShowEntryView, QString::fromLatin1( "ShowEntryView" ) );
  KConfigSkeleton::ItemBool  *itemWriteImagesInFile;
  itemWriteImagesInFile = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Write Images In File" ), mWriteImagesInFile, true );
  addItem( itemWriteImagesInFile, QString::fromLatin1( "WriteImagesInFile" ) );
  KConfigSkeleton::ItemBool  *itemAskWriteImagesInFile;
  itemAskWriteImagesInFile = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Ask Write Images In File" ), mAskWriteImagesInFile, true );
  addItem( itemAskWriteImagesInFile, QString::fromLatin1( "AskWriteImagesInFile" ) );
  KConfigSkeleton::ItemBool  *itemReopenLastFile;
  itemReopenLastFile = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Reopen Last File" ), mReopenLastFile, true );
  addItem( itemReopenLastFile, QString::fromLatin1( "ReopenLastFile" ) );
  KConfigSkeleton::ItemBool  *itemAutoCapitalization;
  itemAutoCapitalization = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Auto Capitalization" ), mAutoCapitalization, true );
  addItem( itemAutoCapitalization, QString::fromLatin1( "AutoCapitalization" ) );
  KConfigSkeleton::ItemBool  *itemAutoFormat;
  itemAutoFormat = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Auto Format" ), mAutoFormat, true );
  addItem( itemAutoFormat, QString::fromLatin1( "AutoFormat" ) );
  KConfigSkeleton::ItemString  *itemLastOpenFile;
  itemLastOpenFile = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Last Open File" ), mLastOpenFile );
  addItem( itemLastOpenFile, QString::fromLatin1( "LastOpenFile" ) );
  KConfigSkeleton::ItemString  *itemNoCapitalizationString;
  itemNoCapitalizationString = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "No Capitalization" ), mNoCapitalizationString, i18n("a,an,and,as,at,but,by,for,from,in,into,nor,of,off,on,onto,or,out,over,the,to,up,with") );
  addItem( itemNoCapitalizationString, QString::fromLatin1( "noCapitalizationString" ) );
  KConfigSkeleton::ItemString  *itemArticlesString;
  itemArticlesString = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Articles" ), mArticlesString, i18n("the") );
  addItem( itemArticlesString, QString::fromLatin1( "articlesString" ) );
  KConfigSkeleton::ItemString  *itemNameSuffixesString;
  itemNameSuffixesString = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Name Suffixes" ), mNameSuffixesString, i18n("jr.,jr,iii,iv") );
  addItem( itemNameSuffixesString, QString::fromLatin1( "nameSuffixesString" ) );
  KConfigSkeleton::ItemString  *itemSurnamePrefixesString;
  itemSurnamePrefixesString = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Surname Prefixes" ), mSurnamePrefixesString, i18n("de,van,der,van der,von") );
  addItem( itemSurnamePrefixesString, QString::fromLatin1( "surnamePrefixesString" ) );
  KConfigSkeleton::ItemInt  *itemMaxIconSize;
  itemMaxIconSize = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "Max Icon Size" ), mMaxIconSize, 96 );
  addItem( itemMaxIconSize, QString::fromLatin1( "MaxIconSize" ) );
  KConfigSkeleton::ItemInt  *itemImageCacheSize;
  itemImageCacheSize = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "Image Cache Size" ), mImageCacheSize, (5 * 1024 * 1024) );
  addItem( itemImageCacheSize, QString::fromLatin1( "ImageCacheSize" ) );
  KConfigSkeleton::ItemUInt  *itemMaxCustomURLSettings;
  itemMaxCustomURLSettings = new KConfigSkeleton::ItemUInt( currentGroup(), QString::fromLatin1( "Max Custom URL Settings" ), mMaxCustomURLSettings, 9 );
  addItem( itemMaxCustomURLSettings, QString::fromLatin1( "MaxCustomURLSettings" ) );

  setCurrentGroup( QString::fromLatin1( "Printing" ) );

  KConfigSkeleton::ItemBool  *itemPrintFieldHeaders;
  itemPrintFieldHeaders = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Print Field Headers" ), mPrintFieldHeaders, true );
  addItem( itemPrintFieldHeaders, QString::fromLatin1( "PrintFieldHeaders" ) );
  KConfigSkeleton::ItemBool  *itemPrintFormatted;
  itemPrintFormatted = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Print Formatted" ), mPrintFormatted, true );
  addItem( itemPrintFormatted, QString::fromLatin1( "PrintFormatted" ) );
  KConfigSkeleton::ItemBool  *itemPrintGrouped;
  itemPrintGrouped = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "Print Grouped" ), mPrintGrouped, true );
  addItem( itemPrintGrouped, QString::fromLatin1( "PrintGrouped" ) );
  KConfigSkeleton::ItemInt  *itemMaxImageWidth;
  itemMaxImageWidth = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "Max Image Width" ), mMaxImageWidth, 50 );
  addItem( itemMaxImageWidth, QString::fromLatin1( "MaxImageWidth" ) );
  KConfigSkeleton::ItemInt  *itemMaxImageHeight;
  itemMaxImageHeight = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "Max Image Height" ), mMaxImageHeight, 50 );
  addItem( itemMaxImageHeight, QString::fromLatin1( "MaxImageHeight" ) );

  setCurrentGroup( QString::fromLatin1( "Options - book" ) );

  KConfigSkeleton::ItemString  *itemTemplateBook;
  itemTemplateBook = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateBook, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateBook, QString::fromLatin1( "templateBook" ) );
  KConfigSkeleton::ItemFont  *itemFontBook;
  itemFontBook = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontBook, KGlobalSettings::generalFont() );
  addItem( itemFontBook, QString::fromLatin1( "fontBook" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorBook;
  itemBaseColorBook = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorBook, KGlobalSettings::baseColor() );
  addItem( itemBaseColorBook, QString::fromLatin1( "baseColorBook" ) );
  KConfigSkeleton::ItemColor  *itemTextColorBook;
  itemTextColorBook = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorBook, KGlobalSettings::textColor() );
  addItem( itemTextColorBook, QString::fromLatin1( "textColorBook" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorBook;
  itemHighlightedBaseColorBook = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorBook, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorBook, QString::fromLatin1( "highlightedBaseColorBook" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorBook;
  itemHighlightedTextColorBook = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorBook, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorBook, QString::fromLatin1( "highlightedTextColorBook" ) );

  setCurrentGroup( QString::fromLatin1( "Options - video" ) );

  KConfigSkeleton::ItemString  *itemTemplateVideo;
  itemTemplateVideo = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateVideo, QString::fromLatin1( "Video" ) );
  addItem( itemTemplateVideo, QString::fromLatin1( "templateVideo" ) );
  KConfigSkeleton::ItemFont  *itemFontVideo;
  itemFontVideo = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontVideo, KGlobalSettings::generalFont() );
  addItem( itemFontVideo, QString::fromLatin1( "fontVideo" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorVideo;
  itemBaseColorVideo = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorVideo, KGlobalSettings::baseColor() );
  addItem( itemBaseColorVideo, QString::fromLatin1( "baseColorVideo" ) );
  KConfigSkeleton::ItemColor  *itemTextColorVideo;
  itemTextColorVideo = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorVideo, KGlobalSettings::textColor() );
  addItem( itemTextColorVideo, QString::fromLatin1( "textColorVideo" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorVideo;
  itemHighlightedBaseColorVideo = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorVideo, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorVideo, QString::fromLatin1( "highlightedBaseColorVideo" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorVideo;
  itemHighlightedTextColorVideo = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorVideo, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorVideo, QString::fromLatin1( "highlightedTextColorVideo" ) );

  setCurrentGroup( QString::fromLatin1( "Options - album" ) );

  KConfigSkeleton::ItemString  *itemTemplateAlbum;
  itemTemplateAlbum = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateAlbum, QString::fromLatin1( "Album" ) );
  addItem( itemTemplateAlbum, QString::fromLatin1( "templateAlbum" ) );
  KConfigSkeleton::ItemFont  *itemFontAlbum;
  itemFontAlbum = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontAlbum, KGlobalSettings::generalFont() );
  addItem( itemFontAlbum, QString::fromLatin1( "fontAlbum" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorAlbum;
  itemBaseColorAlbum = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorAlbum, KGlobalSettings::baseColor() );
  addItem( itemBaseColorAlbum, QString::fromLatin1( "baseColorAlbum" ) );
  KConfigSkeleton::ItemColor  *itemTextColorAlbum;
  itemTextColorAlbum = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorAlbum, KGlobalSettings::textColor() );
  addItem( itemTextColorAlbum, QString::fromLatin1( "textColorAlbum" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorAlbum;
  itemHighlightedBaseColorAlbum = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorAlbum, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorAlbum, QString::fromLatin1( "highlightedBaseColorAlbum" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorAlbum;
  itemHighlightedTextColorAlbum = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorAlbum, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorAlbum, QString::fromLatin1( "highlightedTextColorAlbum" ) );

  setCurrentGroup( QString::fromLatin1( "Options - bibtex" ) );

  KConfigSkeleton::ItemPath  *itemLyxpipe;
  itemLyxpipe = new KConfigSkeleton::ItemPath( currentGroup(), QString::fromLatin1( "lyxpipe" ), mLyxpipe, QString::fromLatin1( "$HOME/.lyx/lyxpipe" ) );
  addItem( itemLyxpipe, QString::fromLatin1( "lyxpipe" ) );
  KConfigSkeleton::ItemString  *itemTemplateBibtex;
  itemTemplateBibtex = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateBibtex, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateBibtex, QString::fromLatin1( "templateBibtex" ) );
  KConfigSkeleton::ItemFont  *itemFontBibtex;
  itemFontBibtex = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontBibtex, KGlobalSettings::generalFont() );
  addItem( itemFontBibtex, QString::fromLatin1( "fontBibtex" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorBibtex;
  itemBaseColorBibtex = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorBibtex, KGlobalSettings::baseColor() );
  addItem( itemBaseColorBibtex, QString::fromLatin1( "baseColorBibtex" ) );
  KConfigSkeleton::ItemColor  *itemTextColorBibtex;
  itemTextColorBibtex = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorBibtex, KGlobalSettings::textColor() );
  addItem( itemTextColorBibtex, QString::fromLatin1( "textColorBibtex" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorBibtex;
  itemHighlightedBaseColorBibtex = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorBibtex, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorBibtex, QString::fromLatin1( "highlightedBaseColorBibtex" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorBibtex;
  itemHighlightedTextColorBibtex = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorBibtex, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorBibtex, QString::fromLatin1( "highlightedTextColorBibtex" ) );

  setCurrentGroup( QString::fromLatin1( "Options - comic" ) );

  KConfigSkeleton::ItemString  *itemTemplateComicBook;
  itemTemplateComicBook = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateComicBook, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateComicBook, QString::fromLatin1( "templateComicBook" ) );
  KConfigSkeleton::ItemFont  *itemFontComicBook;
  itemFontComicBook = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontComicBook, KGlobalSettings::generalFont() );
  addItem( itemFontComicBook, QString::fromLatin1( "fontComicBook" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorComicBook;
  itemBaseColorComicBook = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorComicBook, KGlobalSettings::baseColor() );
  addItem( itemBaseColorComicBook, QString::fromLatin1( "baseColorComicBook" ) );
  KConfigSkeleton::ItemColor  *itemTextColorComicBook;
  itemTextColorComicBook = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorComicBook, KGlobalSettings::textColor() );
  addItem( itemTextColorComicBook, QString::fromLatin1( "textColorComicBook" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorComicBook;
  itemHighlightedBaseColorComicBook = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorComicBook, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorComicBook, QString::fromLatin1( "highlightedBaseColorComicBook" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorComicBook;
  itemHighlightedTextColorComicBook = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorComicBook, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorComicBook, QString::fromLatin1( "highlightedTextColorComicBook" ) );

  setCurrentGroup( QString::fromLatin1( "Options - wine" ) );

  KConfigSkeleton::ItemString  *itemTemplateWine;
  itemTemplateWine = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateWine, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateWine, QString::fromLatin1( "templateWine" ) );
  KConfigSkeleton::ItemFont  *itemFontWine;
  itemFontWine = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontWine, KGlobalSettings::generalFont() );
  addItem( itemFontWine, QString::fromLatin1( "fontWine" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorWine;
  itemBaseColorWine = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorWine, KGlobalSettings::baseColor() );
  addItem( itemBaseColorWine, QString::fromLatin1( "baseColorWine" ) );
  KConfigSkeleton::ItemColor  *itemTextColorWine;
  itemTextColorWine = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorWine, KGlobalSettings::textColor() );
  addItem( itemTextColorWine, QString::fromLatin1( "textColorWine" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorWine;
  itemHighlightedBaseColorWine = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorWine, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorWine, QString::fromLatin1( "highlightedBaseColorWine" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorWine;
  itemHighlightedTextColorWine = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorWine, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorWine, QString::fromLatin1( "highlightedTextColorWine" ) );

  setCurrentGroup( QString::fromLatin1( "Options - coin" ) );

  KConfigSkeleton::ItemString  *itemTemplateCoin;
  itemTemplateCoin = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateCoin, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateCoin, QString::fromLatin1( "templateCoin" ) );
  KConfigSkeleton::ItemFont  *itemFontCoin;
  itemFontCoin = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontCoin, KGlobalSettings::generalFont() );
  addItem( itemFontCoin, QString::fromLatin1( "fontCoin" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorCoin;
  itemBaseColorCoin = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorCoin, KGlobalSettings::baseColor() );
  addItem( itemBaseColorCoin, QString::fromLatin1( "baseColorCoin" ) );
  KConfigSkeleton::ItemColor  *itemTextColorCoin;
  itemTextColorCoin = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorCoin, KGlobalSettings::textColor() );
  addItem( itemTextColorCoin, QString::fromLatin1( "textColorCoin" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorCoin;
  itemHighlightedBaseColorCoin = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorCoin, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorCoin, QString::fromLatin1( "highlightedBaseColorCoin" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorCoin;
  itemHighlightedTextColorCoin = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorCoin, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorCoin, QString::fromLatin1( "highlightedTextColorCoin" ) );

  setCurrentGroup( QString::fromLatin1( "Options - stamp" ) );

  KConfigSkeleton::ItemString  *itemTemplateStamp;
  itemTemplateStamp = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateStamp, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateStamp, QString::fromLatin1( "templateStamp" ) );
  KConfigSkeleton::ItemFont  *itemFontStamp;
  itemFontStamp = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontStamp, KGlobalSettings::generalFont() );
  addItem( itemFontStamp, QString::fromLatin1( "fontStamp" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorStamp;
  itemBaseColorStamp = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorStamp, KGlobalSettings::baseColor() );
  addItem( itemBaseColorStamp, QString::fromLatin1( "baseColorStamp" ) );
  KConfigSkeleton::ItemColor  *itemTextColorStamp;
  itemTextColorStamp = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorStamp, KGlobalSettings::textColor() );
  addItem( itemTextColorStamp, QString::fromLatin1( "textColorStamp" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorStamp;
  itemHighlightedBaseColorStamp = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorStamp, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorStamp, QString::fromLatin1( "highlightedBaseColorStamp" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorStamp;
  itemHighlightedTextColorStamp = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorStamp, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorStamp, QString::fromLatin1( "highlightedTextColorStamp" ) );

  setCurrentGroup( QString::fromLatin1( "Options - card" ) );

  KConfigSkeleton::ItemString  *itemTemplateCard;
  itemTemplateCard = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateCard, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateCard, QString::fromLatin1( "templateCard" ) );
  KConfigSkeleton::ItemFont  *itemFontCard;
  itemFontCard = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontCard, KGlobalSettings::generalFont() );
  addItem( itemFontCard, QString::fromLatin1( "fontCard" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorCard;
  itemBaseColorCard = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorCard, KGlobalSettings::baseColor() );
  addItem( itemBaseColorCard, QString::fromLatin1( "baseColorCard" ) );
  KConfigSkeleton::ItemColor  *itemTextColorCard;
  itemTextColorCard = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorCard, KGlobalSettings::textColor() );
  addItem( itemTextColorCard, QString::fromLatin1( "textColorCard" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorCard;
  itemHighlightedBaseColorCard = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorCard, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorCard, QString::fromLatin1( "highlightedBaseColorCard" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorCard;
  itemHighlightedTextColorCard = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorCard, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorCard, QString::fromLatin1( "highlightedTextColorCard" ) );

  setCurrentGroup( QString::fromLatin1( "Options - game" ) );

  KConfigSkeleton::ItemString  *itemTemplateGame;
  itemTemplateGame = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateGame, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateGame, QString::fromLatin1( "templateGame" ) );
  KConfigSkeleton::ItemFont  *itemFontGame;
  itemFontGame = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontGame, KGlobalSettings::generalFont() );
  addItem( itemFontGame, QString::fromLatin1( "fontGame" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorGame;
  itemBaseColorGame = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorGame, KGlobalSettings::baseColor() );
  addItem( itemBaseColorGame, QString::fromLatin1( "baseColorGame" ) );
  KConfigSkeleton::ItemColor  *itemTextColorGame;
  itemTextColorGame = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorGame, KGlobalSettings::textColor() );
  addItem( itemTextColorGame, QString::fromLatin1( "textColorGame" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorGame;
  itemHighlightedBaseColorGame = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorGame, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorGame, QString::fromLatin1( "highlightedBaseColorGame" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorGame;
  itemHighlightedTextColorGame = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorGame, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorGame, QString::fromLatin1( "highlightedTextColorGame" ) );

  setCurrentGroup( QString::fromLatin1( "Options - file" ) );

  KConfigSkeleton::ItemString  *itemTemplateFile;
  itemTemplateFile = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateFile, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateFile, QString::fromLatin1( "templateFile" ) );
  KConfigSkeleton::ItemFont  *itemFontFile;
  itemFontFile = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontFile, KGlobalSettings::generalFont() );
  addItem( itemFontFile, QString::fromLatin1( "fontFile" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorFile;
  itemBaseColorFile = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorFile, KGlobalSettings::baseColor() );
  addItem( itemBaseColorFile, QString::fromLatin1( "baseColorFile" ) );
  KConfigSkeleton::ItemColor  *itemTextColorFile;
  itemTextColorFile = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorFile, KGlobalSettings::textColor() );
  addItem( itemTextColorFile, QString::fromLatin1( "textColorFile" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorFile;
  itemHighlightedBaseColorFile = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorFile, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorFile, QString::fromLatin1( "highlightedBaseColorFile" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorFile;
  itemHighlightedTextColorFile = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorFile, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorFile, QString::fromLatin1( "highlightedTextColorFile" ) );

  setCurrentGroup( QString::fromLatin1( "Options - entry" ) );

  KConfigSkeleton::ItemString  *itemTemplateBase;
  itemTemplateBase = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Entry Template" ), mTemplateBase, QString::fromLatin1( "Fancy" ) );
  addItem( itemTemplateBase, QString::fromLatin1( "templateBase" ) );
  KConfigSkeleton::ItemFont  *itemFontBase;
  itemFontBase = new KConfigSkeleton::ItemFont( currentGroup(), QString::fromLatin1( "Template Font" ), mFontBase, KGlobalSettings::generalFont() );
  addItem( itemFontBase, QString::fromLatin1( "fontBase" ) );
  KConfigSkeleton::ItemColor  *itemBaseColorBase;
  itemBaseColorBase = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Base Color" ), mBaseColorBase, KGlobalSettings::baseColor() );
  addItem( itemBaseColorBase, QString::fromLatin1( "baseColorBase" ) );
  KConfigSkeleton::ItemColor  *itemTextColorBase;
  itemTextColorBase = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Text Color" ), mTextColorBase, KGlobalSettings::textColor() );
  addItem( itemTextColorBase, QString::fromLatin1( "textColorBase" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedBaseColorBase;
  itemHighlightedBaseColorBase = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlight Color" ), mHighlightedBaseColorBase, KGlobalSettings::highlightColor() );
  addItem( itemHighlightedBaseColorBase, QString::fromLatin1( "highlightedBaseColorBase" ) );
  KConfigSkeleton::ItemColor  *itemHighlightedTextColorBase;
  itemHighlightedTextColorBase = new KConfigSkeleton::ItemColor( currentGroup(), QString::fromLatin1( "Template Highlighted Text Color" ), mHighlightedTextColorBase, KGlobalSettings::highlightedTextColor() );
  addItem( itemHighlightedTextColorBase, QString::fromLatin1( "highlightedTextColorBase" ) );
}

Config::~Config()
{
  if ( mSelf == this )
    staticConfigDeleter.setObject( mSelf, 0, false );
}

