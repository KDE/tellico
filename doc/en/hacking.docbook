<chapter id="hacking">
<title>Hacking &bookcase;</title>

<para>
In the spirit of Free Software, you're welcome to hack on &bookcase; as much as you like. You should be able to write scripts to import, export, or modify data very easily. This chapter gives you more information about doing that.
</para>

<sect1 id="file-format">
<title>File Format</title>

<para>
The default &bookcase; data file is a zip archive, normally with a <literal role="extension">.bc</literal> file extension. Inside the archive is a top-level <filename>bookcase.xml</filename> file. Any images are placed inside the <filename>images/</filename> directory in the archive. Additionally, the data file may be simply the <acronym>XML</acronym> file itself.
</para>

<sect2 id="xml-format">
<title>XML Data</title>

<para>
</para>
</sect2>

<sect2 id="image-format">
<title>Image Format</title>

<para>
Images may also be included in the <acronym>XML</acronym> stream as base64-encoded data. This format may be useful when writing scripts to interface with &bookcase; when creating a Zip archive may be a hassle.
</para>

</sect2>

</sect1>

<sect1 id="collection-type-values">
<title>Collection Type Values</title>

<para>
The type of collection is given in the type attribute of the collection element. The value is equal to the Type enum value in <filename>src/collection.h</filename>.
</para>

<table>
<title>Collection Type Values</title>
<tgroup cols="2">
<thead>
<row>
<entry>Collection Type</entry>
<entry>Value</entry>
</row>
</thead>
<tbody>
<row><entry>Custom Collection</entry><entry>1</entry></row>
<row><entry>Book Collection</entry><entry>2</entry></row>
<row><entry>Video Collection</entry><entry>3</entry></row>
<row><entry>Music Collection</entry><entry>4</entry></row>
<row><entry>Bibliography</entry><entry>5</entry></row>
<row><entry>Comic Book Collection</entry><entry>6</entry></row>
<row><entry>Wine Collection</entry><entry>7</entry></row>
<row><entry>Coin Collection</entry><entry>8</entry></row>
<row><entry>Stamp Collection</entry><entry>9</entry></row>
<row><entry>Trading Card Collection</entry><entry>10</entry></row>
</tbody>
</tgroup>
</table>


</sect1>

<sect1 id="field-type-values">
<title>Field Type Values</title>

<para>
&bookcase; will include all the default fields for a collection if the first field element has the name <emphasis>_default</emphasis>. For <emphasis>Paragraph</emphasis>, <emphasis>Table</emphasis>, or <emphasis>Image</emphasis> fields, the field category should be identical to the field title.
</para>

<para>
The type of field is given in the type attribute of the field element. The value is equal to the FieldType enum value in <filename>src/field.h</filename>. <emphasis>ReadOnly</emphasis> fields were intended for fields which should be retained in the collection, but which should not be editable by the user, such as some fields added when importing a collection from another file format. It is not currently used.
</para>

<table>
<title>Field Type Values</title>
<tgroup cols="2">
<thead>
<row>
<entry>Field Type</entry>
<entry>Value</entry>
</row>
</thead>
<tbody>
<row><entry>Simple Text</entry><entry>1</entry></row>
<row><entry>Paragraph</entry><entry>2</entry></row>
<row><entry>Choice</entry><entry>3</entry></row>
<row><entry>Checkbox</entry><entry>4</entry></row>
<row><entry><emphasis>ReadOnly</emphasis></entry><entry>5</entry></row>
<row><entry>Number</entry><entry>6</entry></row>
<row><entry>URL</entry><entry>7</entry></row>
<row><entry>Single-Column Table</entry><entry>8</entry></row>
<row><entry>Double-Column Table</entry><entry>9</entry></row>
<row><entry>Image</entry><entry>10</entry></row>
<row><entry>Dependent</entry><entry>11</entry></row>
<row><entry>Date</entry><entry>12</entry></row>
</tbody>
</tgroup>
</table>

<para>
The field may have different flags set, given as a bitwise OR'd value in the flags attribute on the field element. The flag for preventing the user from deleting a field is intended for such things as the citation key for bibliographic entries.
</para>

<table>
<title>Field Flag Values</title>
<tgroup cols="2">
<thead>
<row>
<entry>Field Flags</entry>
<entry>Value</entry>
</row>
</thead>
<tbody>
<row><entry>Allow Multiple Values</entry><entry>0x01</entry></row>
<row><entry>Allow Grouping</entry><entry>0x02</entry></row>
<row><entry>Allow Completion</entry><entry>0x04</entry></row>
<row><entry><emphasis>Disallow Deleting</emphasis></entry><entry>0x08</entry></row>
</tbody>
</tgroup>
</table>

<para>
The format of the field is given in the format attribute on the field element. <emphasis>Date Formatting</emphasis> is not currently used. Grouping by <emphasis>People</emphasis> uses all the fields which use <emphasis>Name Formatting</emphasis>.
</para>

<table>
<title>Field Format Values</title>
<tgroup cols="2">
<thead>
<row>
<entry>Field Format</entry>
<entry>Value</entry>
</row>
</thead>
<tbody>
<row><entry>Capitalization Only</entry><entry>0</entry></row>
<row><entry>Title Formatting</entry><entry>1</entry></row>
<row><entry>Name Formatting</entry><entry>2</entry></row>
<row><entry><emphasis>Date Formatting</emphasis></entry><entry>3</entry></row>
<row><entry>No Formatting</entry><entry>4</entry></row>
</tbody>
</tgroup>
</table>

</sect1>

<sect1 id="hidden-options">
<title>Hidden Configuration Options</title>

<para>
&bookcase; has some additional configuration options that are not visible in the &config-dialog;. They are not important enough to warrant cluttering the dialog with more settings, but as they represent options which may appeal to various users, the application does read them from the configuration file.
</para>

<para>
The settings for &bookcase; are saved in a file in the user's home folder, namely <filename>$<envar>KDEHOME</envar>/share/config/bookcaserc</filename>. Within that file, settings are put in groups, which appear with bracketed names, such as [General Options]. To add a setting to the General Options group, find the line in the settings file with that group name. If it does not appear, then create it yourself by adding a line saying [General Options]. Then, the setting can be added underneath the group name.
</para>

<sect2 id="hidden-general-options">
<title>[General Options]</title>

<para>
These settings should be placed in the General Options group.
</para>

<sect3>
<title>Max Icon Size</title>

<para>
The maximum size of the icons in the &icon-view; may be changed with this setting. The default value is 96. The size must be in the range of 32 to 128.
</para>
</sect3>

<sect3>
<title>Example</title>
<informalexample>
<para><userinput>Max Icon Size=72</userinput></para>
</informalexample>
</sect3>

</sect2>

<sect2 id="hidden-amazon-web-services">
<title>[Amazon Web Services]</title>

<para>
These settings should be placed in the Amazon Web Services group.
</para>

<sect3>
<title>AddLinkField</title>

<para>
If this setting is true, &bookcase; will add a collection field containing a link to <ulink url="http://amazon.com">Amazon.com</ulink> when data imported from Amazon Web Services. The default setting is true.
</para>
</sect3>

<sect3>
<title>ImageSize</title>

<para>
Images imported from <ulink url="http://amazon.com">Amazon.com</ulink> can be downloaded in three sizes. The default setting is 1 (Medium). The possible values are 0, 1, and 2.
</para>
</sect3>

<sect3>
<title>DevToken</title>

<para>
A developer's token is required to use the Amazon Web Services. &bookcase; uses a default token, but you may wish to use a different one.
</para>
</sect3>

<sect3>
<title>AssocToken</title>

<para>
An associate's token is required to use the Amazon Web Services. &bookcase; uses a default token, but you may wish to use a different one. Any links resulting from imported <ulink url="http://amazon.com">Amazon.com</ulink> data will contains the associate's token, which allows Amazon.com to track any sales generated by &bookcase; as well as to return a portion of the revenue to the &bookcase; developer.
</para>
</sect3>

<sect3>
<title>Example</title>
<informalexample>
<para><userinput>AddLinkField=false</userinput></para>
<para><userinput>ImageSize=2</userinput></para>
<para><userinput>DevToken=D1AYHI5IKAIDPL</userinput></para>
<para><userinput>AssocToken=bookcase-20</userinput></para>
</informalexample>
</sect3>
</sect2>

<sect2 id="hidden-export-options-pilotdb">
<title>[Export Options - PilotDB]</title>

<para>
These settings should be placed in the Export Options - PilotDB group.
</para>

<sect3>
<title>Charset</title>

<para>
The encoding of the exported data within the PilotDB file may be changed with this setting. The default value is the character set for the user's locale.
</para>
</sect3>

<sect3>
<title>Example</title>
<informalexample>
<para><userinput>Charset=Windows-1250</userinput></para>
</informalexample>
</sect3>
</sect2>

</sect1>

<sect1 id="xslt-tricks">
<title>XSLT Tricks</title>

<para>
Here are some tips for writing XSLT to parse &bookcase; XML data:
</para>
</sect1>

</chapter>
